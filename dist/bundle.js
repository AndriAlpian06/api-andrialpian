(()=>{"use strict";var e={156:function(e,t,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=o(i(252)),s=o(i(139));o(i(818)).default.config();const r=(0,n.default)(),a=process.env.PORT||4e3;r.use(n.default.json()),r.use(n.default.urlencoded({extended:!0})),r.use("/",s.default),r.listen(a,(()=>{console.log(`Server is running on PORT ${a}`)}))},976:function(e,t,i){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=o(i(461)),s=o(i(928)),r=n.default.diskStorage({destination:function(e,t,i){i(null,s.default.join(__dirname,"../../uploads"))},filename:function(e,t,i){const o=Date.now()+"-"+Math.round(1e9*Math.random());i(null,t.fieldname+"-"+o+s.default.extname(t.originalname))}}),a=(0,n.default)({storage:r,fileFilter:(e,t,i)=>{const o=/jpeg|jpg|png|pdf|doc|docx/,n=o.test(s.default.extname(t.originalname).toLocaleLowerCase());if(o.test(t.mimetype)&&n)return i(null,!0);i(new Error("Only images with jpeg, jpg, and png formats are allowed!"))},limits:{fileSize:5242880}});t.default=a},139:function(e,t,i){var o=this&&this.__awaiter||function(e,t,i,o){return new(i||(i=Promise))((function(n,s){function r(e){try{u(o.next(e))}catch(e){s(e)}}function a(e){try{u(o.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}u((o=o.apply(e,t||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(252),r=i(330),a=n(i(818)),u=n(i(976));a.default.config;const l=new r.PrismaClient,c=(0,s.Router)();c.get("/",((e,t)=>{t.json({message:"Hello world!!!"})})),c.post("/addUser",u.default.fields([{name:"picture",maxCount:1},{name:"cv",maxCount:1}]),((e,t)=>o(void 0,void 0,void 0,(function*(){console.log("Received fields:",e.body),console.log("Received file:",e.files);try{const{name:i,email:o,bio:n,sub_bio1:s,sub_bio2:r}=e.body;let a,u;e.files&&"picture"in e.files&&e.files.picture&&(a=e.files.picture[0].path),e.files&&"cv"in e.files&&e.files.cv&&(u=e.files.cv[0].path);const c=yield l.users.create({data:{name:i,email:o,bio:n,sub_bio1:s,sub_bio2:r,profile_picture:a,cv:u}});t.status(200).json(c)}catch(e){console.error(e),t.status(500).json({error:"Internal server error"})}})))),c.put("/updateUser/:id",u.default.fields([{name:"picture",maxCount:1},{name:"cv",maxCount:1}]),((e,t)=>o(void 0,void 0,void 0,(function*(){console.log("Received fields:",e.body),console.log("Received file:",e.files);try{const{id:i}=e.params,{name:o,email:n,bio:s,sub_bio1:r,sub_bio2:a}=e.body;let u,c;e.files&&"picture"in e.files&&e.files.picture&&(u=e.files.picture[0].path),e.files&&"cv"in e.files&&e.files.cv&&(c=e.files.cv[0].path);const d=yield l.users.update({where:{user_id:Number(i)},data:{name:o,email:n,bio:s,sub_bio1:r,sub_bio2:a,profile_picture:u,cv:c}});t.status(200).json(d)}catch(e){console.error(e),t.status(500).json({error:"Internal server error"})}})))),c.get("/user",((e,t)=>o(void 0,void 0,void 0,(function*(){const e=yield l.users.findMany();t.json(e)})))),c.get("/about",((e,t)=>{t.json({message:"ini data about"})})),c.get("/test",((e,t)=>{t.json({message:"ini hanya test test"})})),t.default=c},330:e=>{e.exports=require("@prisma/client")},818:e=>{e.exports=require("dotenv")},252:e=>{e.exports=require("express")},461:e=>{e.exports=require("multer")},928:e=>{e.exports=require("path")}},t={};!function i(o){var n=t[o];if(void 0!==n)return n.exports;var s=t[o]={exports:{}};return e[o].call(s.exports,s,s.exports,i),s.exports}(156)})();